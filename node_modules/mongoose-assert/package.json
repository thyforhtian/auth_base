{
  "name": "mongoose-assert",
  "author": {
    "name": "Bodo Kaiser",
    "email": "i@bodokaiser.io"
  },
  "license": "MIT",
  "version": "1.0.1",
  "keywords": [
    "mongoose",
    "assert",
    "validation"
  ],
  "description": "Plugin for mongoose schema validation.",
  "main": "lib/index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "validator": "^3.14.1"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.20.1"
  },
  "repository": {
    "url": "git://github.com/satisfeet/mongoose-assert.git"
  },
  "bugs": {
    "url": "https://github.com/satisfeet/mongoose-assert/issues"
  },
  "readme": "# mongoose-assert\n\n**mongoose-assert** extends the built-in mongoose validators.\n\n## Usage\n\n    var mongoose = require('mongoose');\n\n    // load plugin\n    require('mongoose-assert')(mongoose);\n\n    var schema = new mongoose.Schema({\n      name: String,\n      email: String,\n      price: Number\n    });\n\n    schema.path('name')\n      .required()\n      .length(5, 30)\n      .alpha()\n\n    schema.path('email')\n      .email()\n\n    schema.path('price')\n      .steps(0.01)\n      .min(0)\n\n## Install\n\nWith our lovely [npm](https://github.com/npm/npm)\n\n    $ npm install --save mongoose-assert\n\n## Documentation\n\n**mongoose-assert** extends `mongoose.Schema.Types.*` with more\nvalidation methods on the prototype.\n\n### Number\n\nExtends `mongoose.Schema.Types.Number` with:\n\n#### number.zip()\n\nChecks if the number is a valid german zip code which is in range\nbetween `10000` and `99999`.\n\n#### number.step(unit)\n\n    // 2.991 will be invalid whereas 2.99 will be valid\n    schema.path('price')\n      .step(0.01)\n\nChecks if the number is dividable by `unit` without rest. Useful for\nvalidating prices or other units and setting up a precision.\n\n### String\n\nExtends `mongoose.Schema.Types.String` with:\n\n#### string.email()\n\nChecks if the string is an email.\n\n#### string.alpha()\n\nChecks if the string only contains alpha characters.\n\n#### string.alphanum()\n\nChecks if the string only contains alpha numeric characters.\n\n#### string.length(min[, max])\n\nChecks if the string has a length with at least `min` characters and\nmaximum `max` characters.\n\n## License\n\nCopyright 2014 Bodo Kaiser <i@bodokaiser.io>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/satisfeet/mongoose-assert",
  "_id": "mongoose-assert@1.0.1",
  "_shasum": "234e2554d1b92f981dcfc5939f19bdd5fe678343",
  "_from": "mongoose-assert@*",
  "_resolved": "https://registry.npmjs.org/mongoose-assert/-/mongoose-assert-1.0.1.tgz"
}
